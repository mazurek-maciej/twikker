{"version":3,"sources":["models/StatusOfApiCall.ts","services/postsService.ts","hooks/useFetchData.tsx","utils/validateUser.ts","context/AuthContext.tsx","components/Wall/PostTile/index.tsx","components/Modal/index.tsx","components/Wall/index.tsx","components/Login/index.tsx","components/PostDetails/index.tsx","components/NotFoundError/index.tsx","router/PrivateRoute.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["StatusOfApiCall","RANDOM_NAMES","URL_GET_POSTS","getAllPosts","a","fetch","res","ok","json","posts","mappedPosts","map","post","userName","userId","state","data","error","undefined","getPost","postId","useFetchData","asyncFunc","useState","IDLE","status","setStatus","setState","fetchData","FETCHING","SUCCESS","FAILURE","useEffect","rules","loginLength","RegExp","passwordLength","passwordCapitalLetter","passwordSmallLetter","passwordNumber","AuthContext","React","createContext","isAuth","login","u","p","logout","errors","password","AuthProvider","children","setIsAuth","setErrors","Provider","value","test","length","validateUser","window","sessionStorage","setItem","removeItem","useAuth","useContext","PostTile","handleOnClick","className","onClick","id","title","Modal","message","isVisible","toggleVisibility","Wall","setPosts","filteredPosts","setFilteredPosts","isSearching","setIsSearching","isModalVisible","setIsModalVisible","counter","setCounter","rawPosts","redirectTo","useHistory","push","handleOnSelectPost","useCallback","toggleModalVisibility","renderStatus","renderPosts","interval","setInterval","clearInterval","console","log","htmlFor","type","onChange","event","searchTerm","target","filtered","filter","match","body","Login","username","setUsername","setPassword","renderLoginErrors","renderPasswordErrors","e","to","onSubmit","preventDefault","PostDetails","visible","setVisible","useLocation","pathname","NotFoundError","history","PrivateRoute","props","render","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58ec82f6.chunk.js","sourcesContent":["export enum StatusOfApiCall {\n  IDLE = 'IDLE',\n  FETCHING = 'FETCHING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE',\n}\n","import { Post, State } from '../models';\n\nconst RANDOM_NAMES = [\n  'John',\n  'Mike',\n  'Clara',\n  'Anthony',\n  'Christina',\n  'Clerence',\n  'Darious',\n  'Benjamin',\n  'Angela',\n  'Michael',\n];\n\nexport const URL_GET_POSTS = 'https://jsonplaceholder.typicode.com/posts';\n\nexport const getAllPosts = async (): Promise<State> => {\n  const res = await fetch(URL_GET_POSTS);\n\n  if (res.ok) {\n    const posts: Post[] = await res.json();\n    const mappedPosts = posts.map((post) => ({\n      ...post,\n      userName: RANDOM_NAMES[post.userId - 1],\n    }));\n    const state = {\n      data: mappedPosts,\n      error: undefined,\n    };\n    return state;\n  } else {\n    const state = {\n      data: undefined,\n      error: 'Cannot fetch posts. Please try to refresh the page.',\n    };\n    return state;\n  }\n};\n\nexport const getPost = async (postId: number | string): Promise<State> => {\n  const res = await fetch(`${URL_GET_POSTS}/${postId}`);\n\n  if (res.ok) {\n    const post: Post = await res.json();\n    post.userName = RANDOM_NAMES[post.userId - 1];\n    const state = {\n      data: [post],\n      error: undefined,\n    };\n    return state;\n  } else {\n    const state = {\n      data: undefined,\n      error: `Cannot fetch post with id: ${postId}. Please try to refresh the page`,\n    };\n    return state;\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { State, StatusOfApiCall } from '../models';\n\nexport function useFetchData(asyncFunc: () => Promise<State>) {\n  const [status, setStatus] = useState<StatusOfApiCall>(StatusOfApiCall.IDLE);\n  const [state, setState] = useState<State>({\n    data: undefined,\n    error: undefined,\n  });\n\n  const fetchData = async () => {\n    setStatus(StatusOfApiCall.FETCHING);\n\n    const data = await asyncFunc();\n\n    if (data.data) {\n      setStatus(StatusOfApiCall.SUCCESS);\n      setState(data);\n    } else {\n      setStatus(StatusOfApiCall.FAILURE);\n      setState(data);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { status, state };\n}\n","export interface Errors {\n  login: string | null;\n  password: string[];\n}\n\nconst rules = {\n  loginLength: new RegExp('^(?=.{5,})'),\n  passwordLength: new RegExp('^(?=.{8,})'),\n  passwordCapitalLetter: new RegExp('^(?=.*[A-Z])'),\n  passwordSmallLetter: new RegExp('^(?=.*[a-z])'),\n  passwordNumber: new RegExp('^(?=.*[0-9])'),\n};\n\nexport const validateUser = (login: string, password: string) => {\n  let errors: Errors = {\n    login: null,\n    password: [],\n  };\n  if (!rules.loginLength.test(login)) {\n    errors = {\n      ...errors,\n      login: `Login require at least 5 characters! Your login has ${login.length}`,\n    };\n  }\n\n  if (!rules.passwordSmallLetter.test(password)) {\n    errors = {\n      ...errors,\n      password: [...errors.password, 'Password require at least one small letter!'],\n    };\n  } else {\n    errors = { ...errors, password: [...errors.password] };\n  }\n\n  if (!rules.passwordCapitalLetter.test(password)) {\n    errors = {\n      ...errors,\n      password: [\n        ...errors.password,\n        'Password require at least one capital letter!',\n      ],\n    };\n  } else {\n    errors = { ...errors, password: [...errors.password] };\n  }\n\n  if (!rules.passwordNumber.test(password)) {\n    errors = {\n      ...errors,\n      password: [...errors.password, 'Password require at least one number!'],\n    };\n  } else {\n    errors = { ...errors, password: [...errors.password] };\n  }\n\n  if (!rules.passwordLength.test(password)) {\n    errors = {\n      ...errors,\n      password: [\n        ...errors.password,\n        `Password require at least 8 characters! Your login has ${password.length}`,\n      ],\n    };\n  } else {\n    errors = { ...errors, password: [...errors.password] };\n  }\n\n  return errors;\n};\n","import React, { useState } from 'react';\nimport { Errors, validateUser } from '../utils/validateUser';\n\ninterface ContextState {\n  isAuth: boolean;\n  errors: Errors;\n  login: (u: string, p: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = React.createContext<ContextState>({\n  isAuth: false,\n  login: (u: string, p: string) => {},\n  logout: () => {},\n  errors: {\n    login: null,\n    password: [],\n  },\n});\n\nfunction AuthProvider({ children }: any) {\n  const [isAuth, setIsAuth] = useState(false);\n  const [errors, setErrors] = useState<Errors>({ login: null, password: [] });\n\n  const login = (login: string, password: string) => {\n    const errors = validateUser(login, password);\n    if (!errors.login && errors.password.length < 1) {\n      setIsAuth(true);\n      window.sessionStorage.setItem('username', login);\n      window.sessionStorage.setItem('password', password);\n    } else {\n      setIsAuth(false);\n      setErrors(errors);\n    }\n  };\n  const logout = () => {\n    setIsAuth(false);\n    window.sessionStorage.removeItem('username');\n    window.sessionStorage.removeItem('password');\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuth, login, logout, errors }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport { AuthProvider, useAuth };\n","import { Post } from '../../../models';\n\nimport '../styles.scss';\n\ninterface Props {\n  post: Post;\n  handleOnClick: (id: number) => void;\n}\n\nexport default function PostTile({ post, handleOnClick }: Props) {\n  return (\n    <div className='wall-post' onClick={() => handleOnClick(post.id)}>\n      <h3 className='wall-post__user'>\n        {post.userName} <span className='wall-post__eyes'>👀</span>\n      </h3>\n      <h4 className='wall-post__title'>{post.title}</h4>\n    </div>\n  );\n}\n","import './styles.scss';\n\ninterface Props {\n  message?: string;\n  isVisible: boolean;\n  toggleVisibility: () => void;\n}\n\nexport default function Modal({\n  message = '👀',\n  isVisible,\n  toggleVisibility,\n}: Props) {\n  if (isVisible) {\n    return (\n      <div className={`modal ${isVisible ? 'is-active' : ''}`}>\n        <div className='modal-box'>\n          <h3>{message}</h3>\n          <button className='modal-btn' onClick={toggleVisibility}>\n            OK\n          </button>\n        </div>\n      </div>\n    );\n  }\n  return null;\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { getAllPosts } from '../../services/postsService';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport { useAuth } from '../../context/AuthContext';\n\nimport PostTile from './PostTile';\n\nimport { Post, StatusOfApiCall } from '../../models';\n\nimport './styles.scss';\nimport Modal from '../Modal';\n\nexport default function Wall() {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(true);\n  const [counter, setCounter] = useState(0);\n\n  const { status, state } = useFetchData(() => getAllPosts());\n  const rawPosts = state?.data;\n\n  const { logout } = useAuth();\n\n  const { push: redirectTo } = useHistory();\n\n  const handleOnSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchTerm = event.target.value;\n    if (searchTerm.length === 0) {\n      setIsSearching(false);\n    } else {\n      setIsSearching(true);\n    }\n    const filtered = posts.filter(\n      (p) => p.title.match(searchTerm) || p.body.match(searchTerm),\n    );\n    setFilteredPosts(filtered);\n  };\n\n  const handleOnSelectPost = useCallback(\n    (id: number) => redirectTo(`/post/${id}`),\n    [redirectTo],\n  );\n\n  const toggleModalVisibility = () => setIsModalVisible(false);\n\n  const renderStatus = useCallback(() => {\n    if (status === StatusOfApiCall.FETCHING) return <p>Loading...</p>;\n\n    if (status === StatusOfApiCall.FAILURE)\n      return (\n        <Modal\n          message={state?.error}\n          isVisible={isModalVisible}\n          toggleVisibility={toggleModalVisibility}\n        />\n      );\n  }, [status, state?.error, isModalVisible]);\n\n  const renderPosts = useCallback(() => {\n    if (\n      isSearching &&\n      filteredPosts.length > 0 &&\n      status === StatusOfApiCall.SUCCESS\n    ) {\n      return filteredPosts.map((post) => (\n        <PostTile key={post.id} post={post} handleOnClick={handleOnSelectPost} />\n      ));\n    }\n    if (!isSearching && posts && status === StatusOfApiCall.SUCCESS) {\n      return posts.map((post) => (\n        <PostTile key={post.id} post={post} handleOnClick={handleOnSelectPost} />\n      ));\n    }\n    return null;\n  }, [filteredPosts, handleOnSelectPost, isSearching, posts, status]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timer;\n    if (rawPosts && posts.length !== rawPosts?.length) {\n      interval = setInterval(() => {\n        setPosts([...posts, rawPosts[counter]]);\n        setCounter(counter + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [counter, state, posts, rawPosts]);\n\n  console.log(state);\n\n  return (\n    <div className='wall'>\n      <div className='wall-header'>\n        <button className='wall-header__btn' onClick={logout}>\n          logout\n        </button>\n        <div className='wall-header__search'>\n          <label htmlFor='search' className='wall-header__search-label'>\n            Search\n          </label>\n          <input\n            className='wall-header__search-input'\n            id='search'\n            type='text'\n            onChange={handleOnSearch}\n          />\n        </div>\n      </div>\n      <div className='wall-posts'>\n        {renderPosts()}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\n\nimport './styles.scss';\n\nexport default function Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const { isAuth, login, errors } = useAuth();\n\n  const renderLoginErrors = useCallback(() => {\n    return errors.login ? (\n      <p className='login-form-field__error' data-testid='error'>\n        {errors.login} 🙈\n      </p>\n    ) : null;\n  }, [errors.login]);\n\n  const renderPasswordErrors = useCallback(() => {\n    return errors.password\n      ? errors.password.map((e) => (\n          <p key={e} data-testid='error' className='login-form-field__error'>\n            {e} 🙈\n          </p>\n        ))\n      : null;\n  }, [errors.password]);\n\n  if (isAuth) {\n    return <Redirect to='/' />;\n  }\n\n  const handleOnSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    login(username, password);\n  };\n\n  return (\n    <div className='login-container'>\n      <h1 className='login-title'>Twikker</h1>\n      <form className='login-form' onSubmit={handleOnSubmit}>\n        <div className='login-form-field'>\n          <label className='login-form-field__label' htmlFor='username'>\n            Login\n          </label>\n          <input\n            className='login-form-field__input'\n            type='text'\n            id='username'\n            data-testid='login'\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          {renderLoginErrors()}\n        </div>\n        <div className='login-form-field'>\n          <label className='login-form-field__label' htmlFor='pass'>\n            Password\n          </label>\n          <input\n            className='login-form-field__input'\n            type='password'\n            id='pass'\n            data-testid='password'\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {renderPasswordErrors()}\n        </div>\n        <button type='submit' className='login-form-submit'>\n          Log in 👍🏻\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport { StatusOfApiCall } from '../../models';\nimport { getPost } from '../../services/postsService';\nimport Modal from '../Modal';\n\nimport './styles.scss';\n\nexport default function PostDetails() {\n  const [visible, setVisible] = useState(true);\n\n  const { pathname } = useLocation();\n\n  const postId = pathname.match(/\\/post\\/(.*)/)![1];\n\n  const { status, state } = useFetchData(() => getPost(postId));\n  const post = state?.data;\n\n  const handleModalVisibility = () => setVisible(false);\n\n  if (status === StatusOfApiCall.FETCHING) {\n    return (\n      <div className='post-details'>\n        <p className='post-details__loading'>\n          Loading data for post with ID {postId}\n        </p>\n      </div>\n    );\n  }\n\n  if (status === StatusOfApiCall.SUCCESS && post) {\n    return (\n      <div className='post-details'>\n        <div className='post-details__header'>\n          <Link className='post-details__header-back' to='/'>\n            Go back\n          </Link>\n          <h1 className='post-details__header-h1'>Details</h1>\n        </div>\n        <h2 className='post-details__username'>{post[0].userName}</h2>\n        <p>ID: {post[0].userId}</p>\n        <h3>{post[0].title}</h3>\n        <p>{post[0].body}</p>\n      </div>\n    );\n  }\n  return (\n    <>\n      <Modal\n        message={state?.error}\n        isVisible={visible}\n        toggleVisibility={handleModalVisibility}\n      />\n      <h1>Post ID:{postId} not found</h1>\n    </>\n  );\n}\n","import { useHistory } from 'react-router-dom';\n\nimport './styles.scss';\n\nexport default function NotFoundError() {\n  const history = useHistory();\n  const handleOnBack = () => history.push('/');\n\n  return (\n    <div className='not-found'>\n      <h3>You may not find here what you looking for</h3>\n      <h2>Go back to main site and enjoy dose of your favourite posts 🔥</h2>\n      <button className='not-found-btn' onClick={handleOnBack}>\n        Back to main site\n      </button>\n    </div>\n  );\n}\n","import { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nexport default function PrivateRoute({ children, ...props }: RouteProps) {\n  const { isAuth } = useAuth();\n\n  const Component = () => (isAuth ? children : <Redirect to='/login' />);\n\n  return <Route {...props} render={Component} />;\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Wall from './Wall';\nimport Login from './Login';\nimport PostDetails from './PostDetails';\nimport NotFoundError from './NotFoundError';\nimport PrivateRoute from '../router/PrivateRoute';\n\nimport './styles.scss';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path='/login'>\n            <Login />\n          </Route>\n          <PrivateRoute exact path='/'>\n            <Wall />\n          </PrivateRoute>\n          <PrivateRoute path='/post/:id'>\n            <PostDetails />\n          </PrivateRoute>\n          <PrivateRoute path='/*'>\n            <NotFoundError />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/AuthContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}